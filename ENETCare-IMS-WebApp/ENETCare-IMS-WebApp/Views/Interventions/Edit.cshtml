@using ENETCare.IMS.WebApp.Models
@model EditInterventionViewModel
@{
    ViewBag.Title = "Edit";
    ViewBag.SubTitle = "an Intervention";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

    <h3>Intervention Information</h3>

    <div class="row">
        <div class="col-lg-10">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-striped">
                    <thead>
                        <tr>
                            <th>Type</th>
                            <th>Client</th>
                            <th>Proposer</th>
                            <th>Date</th>
                            <th>State</th>
                            <th>District</th>
                            <th>Health</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@Model.Intervention.InterventionType</td>
                            <td>
                                @Html.ActionLink(
                                    Model.Intervention.Client.Name,
                                    "ViewClient", "Clients",
                                    new { ID = Model.Intervention.Client.ID }, null)
                            </td>
                            <td>@Model.Intervention.SiteEngineer</td>
                            <td>@Model.Intervention.Date.ToString("ddd, dd MMM, yyy")</td>
                            <td>@Model.Intervention.Approval</td>
                            <td>@Model.Intervention.District</td>
                            <td>@Model.Intervention.Health</td>
                        </tr>

                    </tbody>
                </table>
            </div>
            @Html.HiddenFor(model => model.InterventionID, new { @Value = Model.Intervention.ID })
            @Html.HiddenFor(model => model.UserID, new { @Value = Model.User.Id })


            @if (@Model.CanModifyState)
                {
                <div>
                    @if (@Model.CanApprove)
                    {
                        <button name="Approve" type="submit" class="btn btn-success">Approve</button>
                    }

                    @if (@Model.CanComplete)
                    {
                        <button name="Complete" type="submit" class="btn btn-success">Complete</button>
                    }

                    @if (@Model.CanCancel)
                    {
                        <button name="Cancel" type="submit" class="btn btn-success">Cancel</button>
                    }

                </div>
            }

            <h3>Quality Information</h3>

            <div class="table-responsive">
                <table class="table table-bordered table-hover table-striped">
                    <thead>
                        <tr>
                            <th>Last Visit</th>
                            <th>Health</th>
                            <th>Notes</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@Model.Intervention.LastVisit</td>
                            <td>@Model.Intervention.Health</td>
                            <td>@Model.Notes</td>
                        </tr>
                    </tbody>
                </table>
            </div>

            @if (@Model.CanModifyQuality)
            {
                <div class="panel-body">
                    <div class="form-group">
                        <label for="Date">Last Visit:</label>
                        <div class="input-group date" data-provide="datepicker" data-date-format="dd MM yyyy">
                            @Html.EditorFor(m => m.Date, new
                               {
                                   htmlAttributes = new
                                   {
                                       @class = "form-control"
                                   }
                               })
                            <div class="input-group-addon">
                                <span class="glyphicon glyphicon-th"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="Labour">Health:</label>
                        @Html.EditorFor(m => m.Health, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.Health, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label for="Notes">Notes:</label>
                        @Html.TextAreaFor(m => m.Notes, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
                    </div>
                </div>

                <button name="Save Quality" type="submit" class="btn btn-success">Save Quality Changes</button>
            }

        </div>
    </div>

}





